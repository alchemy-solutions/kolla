---
- name: Creating the Murano service and endpoint
  command: docker exec -t kolla_toolbox /usr/bin/ansible localhost
    -m kolla_keystone_service
    -a "service_name=murano
        service_type=application_catalog
        description='Openstack Application Catalogue'
        endpoint_region={{ openstack_region_name }}
        admin_url='{{ admin_protocol }}://{{ kolla_internal_fqdn }}:{{ murano_api_port }}'
        internal_url='{{ internal_protocol }}://{{ kolla_internal_fqdn }}:{{ murano_api_port }}'
        public_url='{{ public_protocol }}://{{ kolla_external_fqdn }}:{{ murano_api_port }}'
        region_name={{ openstack_region_name }}
        auth={{ '{{ openstack_murano_auth }}' }}"
    -e "{'openstack_murano_auth':{{ openstack_murano_auth }}}"
  register: murano_endpoint
  changed_when: "{{ murano_endpoint.stdout.find('localhost | SUCCESS => ') != -1 and (murano_endpoint.stdout.split('localhost | SUCCESS => ')[1]|from_json).changed }}"
  until: murano_endpoint.stdout.split()[2] == 'SUCCESS'
  retries: 10
  delay: 5
  run_once: True

- name: Creating the Murano project, user, and role
  command: docker exec -t kolla_toolbox /usr/bin/ansible localhost
    -m kolla_keystone_user
    -a "project=service
        user=murano
        password={{ murano_keystone_password }}
        role=admin
        region_name={{ openstack_region_name }}
        auth={{ '{{ openstack_murano_auth }}' }}"
    -e "{'openstack_murano_auth':{{ openstack_murano_auth }}}"
  register: murano_user
  changed_when: "{{ murano_user.stdout.find('localhost | SUCCESS => ') != -1 and (murano_user.stdout.split('localhost | SUCCESS => ')[1]|from_json).changed }}"
  until: murano_user.stdout.split()[2] == 'SUCCESS'
  retries: 10
  delay: 5
  run_once: True
